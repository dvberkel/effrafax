#summary Description of discrete.

= Introduction =

discrete provides utilities to iterate over the subsets and permutations  of a `Collection`. A _subset_ and _permutation_ are `List`s.

= Details =

== Package Detail ==

The package provides four classes. The can be found in the following packages
  * org.effrafax.discrete
    * `class` Subsets
  * org.effrafax.discrete.util
    * `class` KSubsetIterator
    * `class` SubsetIterator
    * `class` PermutationIterator

== Usage ==

The `Subsets` class provides static methods which return `Iterable`s. These objects iterate over subsets and permutations of a collection and can be used in the "foreach" loop. The static methods are

|| *Method*         || *Iterates over*     ||
|| `kSubsetsOf`     || subsets of size `k` ||
|| `subsetsOf`      || *all* subsets       ||
|| `permutationsOf` || *all* permutations  ||

== Example ==

The following code illustrates typical usage of the methods mentioned in the Usage section.

----
The code example shows the usage of `kSubsetsOf`.
{{{
Collection<String> names = Arrays.asList("Alice", "Bob", "Charlie");
for (List<String> subset : Subsets.kSubsetsOf(names, 2)) {

    System.out.println(subset);
}
}}}
This code yields
{{{
[Alice, Bob]
[Alice, Charlie]
[Bob, Charlie]
}}}

----
The next example is not very different. Is shows the usage of `subsetsOf`.
{{{
Collection<String> names = Arrays.asList("Alice", "Bob", "Charlie");	
for (List<String> subset : Subsets.subsetsOf(names)) {

    System.out.println(subset);
}
}}}
It yields
{{{
[]
[Alice]
[Bob]
[Charlie]
[Alice, Bob]
[Alice, Charlie]
[Bob, Charlie]
[Alice, Bob, Charlie]
}}}

----
The following example show the usage of `permutationsOf`.
{{{
Collection<String> names = Arrays.asList("Alice", "Bob", "Charlie");	
    for (List<String> permutation : Subsets.permutationsOf(names)) {

        System.out.println(permutation);
}
}}}
The above code produces the following output
{{{
[Alice, Bob, Charlie]
[Alice, Charlie, Bob]
[Bob, Alice, Charlie]
[Bob, Charlie, Alice]
[Charlie, Alice, Bob]
[Charlie, Bob, Alice]
}}}
----